%option yylineno
letter        [a-zA-Z_]
digit         [0-9]
signs         [+-]
number        {signs}?{digit}*(\.)?{digit}+
alphanumeric  {letter}+({digit}|{letter})*
string        \"[^\"]*\"
comment       \/\/[^\/]*
%%
\&\&                return(AND);
\|\|                return(OR);
while               return(WHILE);
for                 return(FOR);
return              return(RETURN);
print               return(PRINT);
if                  return(IF);
else                return(ELSE);
function            return(FUNCTION);
connectToURL	  return(CONNECT_TO_URL_FUNCTION);
sendToURL		  return(SEND_TO_URL_FUNCTION);
receiveFromURL	  return(RECEIVE_FROM_URL_FUNCTION);
readSensor		  return(READ_SENSOR_FUNCTION);
readTime		  return(READ_TIME_FUNCTION);
sensor1		  return(S1);
sensor2		  return(S2);
sensor3		  return(S3);
sensor4		  return(S4);
sensor5		  return(S5);
sensor6		  return(S6);
sensor7		  return(S7);
sensor8		  return(S8);
sensor9		  return(S9);
sensor10		  return(S10);
\-\>			  return(BULLET);
\+			  return(PLUS_OP);
\-			  return(MINUS_OP);
\*			  return(MULTIPLY_OP);
\/			  return(DIVIDE_OP);
\%			  return(MOD_OP);              
\=                  return(ASSIGN_OP);
\(                  return(LP);
\)                  return(RP);
\{                  return(LB);
\}                  return(RB);
\,                  return(COMMA);
\:                  return(COLON);
\;                  return(SC);
\<                  return(LT);
\<\=                return(LEQ);
\>                  return(GT);
\>\=                return(GEQ);
\=\=                return(EE);
\!\=                return(NE);
\n					;
{number}            return(NUMBER);
{alphanumeric}      return(IDENTIFIER);
{comment}           return(COMMENT);
{string}            return(STRING);
%%
int yywrap() { return 1; }